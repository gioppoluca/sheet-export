import baseMapping from "../../../../scripts/baseMapping.js";

class MappingClass extends baseMapping {


    authors = [
        {
            name: 'gioppoluca',
            url: 'https://github.com/gioppoluca',
            github: 'https://github.com/gioppoluca',
        },
    ];
    // override createMappings method from base class
    createMappings() {
        super.createMappings();

        // Set the PDF files to use - MIND that the order of the files is important!
        this.pdfFiles.push({
            pdfUrl: '/modules/sheet-export/mappings/sfrpg/Autofillable_CharacterSheet.pdf',
            nameDownload: `${this.actor.name ?? "character"}.pdf`,
            name: "Autofillable_CharacterSheet.pdf",
        });

        this.setCalculated("Character Name",  this.actor.name );
        this.setCalculated("Class/Level",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name) + " / " + this.actor.system.details.level.value );
        this.setCalculated("Race",  this.actor.system.details.race );
        this.setCalculated("Theme",  this.actor.system.details.theme );
        this.setCalculated("Size",  this.actor.system.traits.size );
        this.setCalculated("Speed",  this.actor.system.attributes.speed.land.base > 0 ? this.actor.system.attributes.speed.land.base + "ft (land)" : this.actor.system.attributes.speed.flying.base > 0 ? this.actor.system.attributes.speed.flying.base + "ft (flying)" : this.actor.system.attributes.speed.swimming.base > 0 ? this.actor.system.attributes.speed.swimming.base + "ft (swimming)" : this.actor.system.attributes.speed.burrowing.base > 0 ? this.actor.system.attributes.speed.burrowing.base + "ft (burrowing)" : this.actor.system.attributes.speed.climbing.base > 0 ? this.actor.system.attributes.speed.climbing.base + "ft (climbing)" : "special" );
        this.setCalculated("Gender",  this.actor.system.details.biography.genderPronouns );
        this.setCalculated("Homeworld",  this.actor.system.details.biography.homeWorld );
        this.setCalculated("Alignment",  this.actor.system.details.alignment );
        this.setCalculated("Diety",  this.actor.system.details.biography.deity );
        this.setCalculated("Player Name",  Object.entries(this.actor.ownership).filter(entry => entry[1] === 3).map(entry => entry[0]).map(id => !game.users.get(id)?.isGM ? game.users.get(id)?.name : null).filter(x => x).join(", ") );
        this.setCalculated("Description 1",  "Senses: " + this.actor.system.traits.senses );
        this.setCalculated("Description 2",  "Age: " + this.actor.system.details.biography.age + ", date of birth: " + this.actor.system.details.biography.dateOfBirth);
        this.setCalculated("Description 3",  "Height: " + this.actor.system.details.biography.height + ", weight: " + this.actor.system.details.biography.weight );
        this.setCalculated("Description 4",  "Appearance: " + this.actor.system.details.biography.otherVisuals );
        this.setCalculated("STR 1",  this.actor.system.abilities.str.value );
        this.setCalculated("STR 2",  this.actor.system.abilities.str.mod );
        this.setCalculated("STR 3",  "" );
        this.setCalculated("STR 4",  "" );
        this.setCalculated("DEX 1",  this.actor.system.abilities.dex.value );
        this.setCalculated("DEX 2",  this.actor.system.abilities.dex.mod );
        this.setCalculated("DEX 3",  "" );
        this.setCalculated("DEX 4",  "" );
        this.setCalculated("CON 1",  this.actor.system.abilities.con.value );
        this.setCalculated("CON 2",  this.actor.system.abilities.con.mod );
        this.setCalculated("CON 3",  "" );
        this.setCalculated("CON 4",  "" );
        this.setCalculated("INT 1",  this.actor.system.abilities.int.value );
        this.setCalculated("INT 2",  this.actor.system.abilities.int.mod );
        this.setCalculated("INT 3",  "" );
        this.setCalculated("INT 4",  "" );
        this.setCalculated("WIS 1",  this.actor.system.abilities.wis.value );
        this.setCalculated("WIS 2",  this.actor.system.abilities.wis.mod );
        this.setCalculated("WIS 3",  "" );
        this.setCalculated("WIS 4",  "" );
        this.setCalculated("CHA 1",  this.actor.system.abilities.cha.value );
        this.setCalculated("CHA 2",  this.actor.system.abilities.cha.mod );
        this.setCalculated("CHA 3",  "" );
        this.setCalculated("CHA 4",  "" );
        this.setCalculated("Skill Ranks",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.skillRanks.value) );
        this.setCalculated("Check Acr",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.acr)[0] );
        this.setCalculated("Check Ath",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.ath)[0] );
        this.setCalculated("Check Blu",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.blu)[0] );
        this.setCalculated("Check Com",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.com)[0] );
        this.setCalculated("Check Cul",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.cul)[0] );
        this.setCalculated("Check Dip",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.dip)[0] );
        this.setCalculated("Check Dis",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.dis)[0] );
        this.setCalculated("Check Eng",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.eng)[0] );
        this.setCalculated("Check Int",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.int)[0] );
        this.setCalculated("Check Lif",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.lsc)[0] );
        this.setCalculated("Check Med",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.med)[0] );
        this.setCalculated("Check Mys",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.mys)[0] );
        this.setCalculated("Check Per",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.per)[0] );
        this.setCalculated("Check Phy",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.phs)[0] );
        this.setCalculated("Check Pil",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.pil)[0] );
        this.setCalculated("Check Pro 1",  true );
        this.setCalculated("Check Pro 2",  true );
        this.setCalculated("Check Sen",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.sen)[0] );
        this.setCalculated("Check Sle",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.sle)[0] );
        this.setCalculated("Check Ste",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.ste)[0] );
        this.setCalculated("Check Sur",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.sur)[0] );
        this.setCalculated("Skill Total Acr",  this.actor.system.skills.acr.mod );
        this.setCalculated("Skill Total Ath",  this.actor.system.skills.ath.mod );
        this.setCalculated("Skill Total Blu",  this.actor.system.skills.blu.mod );
        this.setCalculated("Skill Total Com",  this.actor.system.skills.com.mod );
        this.setCalculated("Skill Total Cul",  this.actor.system.skills.cul.mod );
        this.setCalculated("Skill Total Dip",  this.actor.system.skills.dip.mod );
        this.setCalculated("Skill Total Dis",  this.actor.system.skills.dis.mod );
        this.setCalculated("Skill Total Eng",  this.actor.system.skills.eng.mod );
        this.setCalculated("Skill Total Int",  this.actor.system.skills.int.mod );
        this.setCalculated("Skill Total Lif",  this.actor.system.skills.lsc.mod );
        this.setCalculated("Skill Total Med",  this.actor.system.skills.med.mod );
        this.setCalculated("Skill Total Mys",  this.actor.system.skills.mys.mod );
        this.setCalculated("Skill Total Per",  this.actor.system.skills.per.mod );
        this.setCalculated("Skill Total Phy",  this.actor.system.skills.phs.mod );
        this.setCalculated("Skill Total Pil",  this.actor.system.skills.pil.mod );
        this.setCalculated("Skill Total Pro 1",  this.actor.system.skills.pro.mod );
        this.setCalculated("Skill Total Pro 2",  this.actor.system.skills.pro1?.mod || "" );
        this.setCalculated("Skill Total Sen",  this.actor.system.skills.sen.mod );
        this.setCalculated("Skill Total Sle",  this.actor.system.skills.sle.mod );
        this.setCalculated("Skill Total Ste",  this.actor.system.skills.ste.mod );
        this.setCalculated("Skill Total Sur",  this.actor.system.skills.sur.mod );
        this.setCalculated("Skill Ranks Acr",  this.actor.system.skills.acr.ranks );
        this.setCalculated("Skill Ranks Ath",  this.actor.system.skills.ath.ranks );
        this.setCalculated("Skill Ranks Blu",  this.actor.system.skills.blu.ranks );
        this.setCalculated("Skill Ranks Com",  this.actor.system.skills.com.ranks );
        this.setCalculated("Skill Ranks Cul",  this.actor.system.skills.cul.ranks );
        this.setCalculated("Skill Ranks Dip",  this.actor.system.skills.dip.ranks );
        this.setCalculated("Skill Ranks Dis",  this.actor.system.skills.dis.ranks );
        this.setCalculated("Skill Ranks Eng",  this.actor.system.skills.eng.ranks );
        this.setCalculated("Skill Ranks Int",  this.actor.system.skills.int.ranks );
        this.setCalculated("Skill Ranks Lif",  this.actor.system.skills.lsc.ranks );
        this.setCalculated("Skill Ranks Med",  this.actor.system.skills.med.ranks );
        this.setCalculated("Skill Ranks Mys",  this.actor.system.skills.mys.ranks );
        this.setCalculated("Skill Ranks Per",  this.actor.system.skills.per.ranks );
        this.setCalculated("Skill Ranks Phy",  this.actor.system.skills.phs.ranks );
        this.setCalculated("Skill Ranks Pil",  this.actor.system.skills.pil.ranks );
        this.setCalculated("Skill Ranks Pro 1",  this.actor.system.skills.pro.ranks );
        this.setCalculated("Skill Ranks Pro 2",  this.actor.system.skills.pro1?.ranks || "" );
        this.setCalculated("Skill Ranks Sen",  this.actor.system.skills.sen.ranks );
        this.setCalculated("Skill Ranks Sle",  this.actor.system.skills.sle.ranks );
        this.setCalculated("Skill Ranks Ste",  this.actor.system.skills.ste.ranks );
        this.setCalculated("Skill Ranks Sur",  this.actor.system.skills.sur.ranks );
        this.setCalculated("Skill Class Acr",  this.actor.system.skills.acr.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.acr)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Ath",  this.actor.system.skills.ath.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.ath)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Blu",  this.actor.system.skills.blu.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.blu)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Com",  this.actor.system.skills.com.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.com)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Cul",  this.actor.system.skills.cul.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.cul)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Dip",  this.actor.system.skills.dip.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.dip)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Dis",  this.actor.system.skills.dis.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.dis)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Eng",  this.actor.system.skills.eng.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.eng)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Int",  this.actor.system.skills.int.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.int)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Lif",  this.actor.system.skills.lsc.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.lsc)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Med",  this.actor.system.skills.med.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.med)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Mys",  this.actor.system.skills.mys.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.mys)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Per",  this.actor.system.skills.per.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.per)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Phy",  this.actor.system.skills.phs.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.phs)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Pil",  this.actor.system.skills.pil.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.pil)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Pro 1",  this.actor.system.skills.pro.ranks > 0 ? 3 : 0 );
        this.setCalculated("Skill Class Pro 2",  this.actor.system.skills.pro1?.ranks > 0 ? 3 : 0 );
        this.setCalculated("Skill Class Sen",  this.actor.system.skills.sen.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.sen)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Sle",  this.actor.system.skills.sle.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.sle)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Ste",  this.actor.system.skills.ste.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.ste)[0] ? 3 : 0 );
        this.setCalculated("Skill Class Sur",  this.actor.system.skills.sur.ranks > 0 && this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.csk.sur)[0] ? 3 : 0 );
        this.setCalculated("Skill Ability Acr",  this.actor.system.abilities.dex.mod );
        this.setCalculated("Skill Ability Ath",  this.actor.system.abilities.str.mod );
        this.setCalculated("Skill Ability Blu",  this.actor.system.abilities.cha.mod );
        this.setCalculated("Skill Ability Com",  this.actor.system.abilities.int.mod );
        this.setCalculated("Skill Ability Cul",  this.actor.system.abilities.int.mod );
        this.setCalculated("Skill Ability Dip",  this.actor.system.abilities.cha.mod );
        this.setCalculated("Skill Ability Dis",  this.actor.system.abilities.cha.mod );
        this.setCalculated("Skill Ability Eng",  this.actor.system.abilities.int.mod );
        this.setCalculated("Skill Ability Int",  this.actor.system.abilities.cha.mod );
        this.setCalculated("Skill Ability Lif",  this.actor.system.abilities.int.mod );
        this.setCalculated("Skill Ability Med",  this.actor.system.abilities.int.mod );
        this.setCalculated("Skill Ability Mys",  this.actor.system.abilities.wis.mod );
        this.setCalculated("Skill Ability Per",  this.actor.system.abilities.wis.mod );
        this.setCalculated("Skill Ability Phy",  this.actor.system.abilities.int.mod );
        this.setCalculated("Skill Ability Pil",  this.actor.system.abilities.dex.mod );
        this.setCalculated("Skill Ability Pro 1",  this.actor.system.skills.pro.ability === "str" ? this.actor.system.abilities.str.mod : this.actor.system.skills.pro.ability === "dex" ? this.actor.system.abilities.dex.mod : this.actor.system.skills.pro.ability === "cha" ? this.actor.system.abilities.cha.mod : this.actor.system.skills.pro.ability === "int" ? this.actor.system.abilities.int.mod : this.actor.system.skills.pro.ability === "wis" ? this.actor.system.abilities.wis.mod : "");
        this.setCalculated("Skill Ability Pro 2",  this.actor.system.skills.pro.ability === "str" ? this.actor.system.abilities.str.mod : this.actor.system.skills.pro.ability === "dex" ? this.actor.system.abilities.dex.mod : this.actor.system.skills.pro.ability === "cha" ? this.actor.system.abilities.cha.mod : this.actor.system.skills.pro.ability === "int" ? this.actor.system.abilities.int.mod : this.actor.system.skills.pro.ability === "wis" ? this.actor.system.abilities.wis.mod : "" );
        this.setCalculated("Skill Ability Sen",  this.actor.system.abilities.wis.mod );
        this.setCalculated("Skill Ability Sle",  this.actor.system.abilities.dex.mod );
        this.setCalculated("Skill Ability Ste",  this.actor.system.abilities.dex.mod );
        this.setCalculated("Skill Ability Sur",  this.actor.system.abilities.wis.mod );
        this.setCalculated("Skill Misc Acr",  this.actor.system.skills.acr.misc );
        this.setCalculated("Skill Misc Ath",  this.actor.system.skills.ath.misc );
        this.setCalculated("Skill Misc Blu",  this.actor.system.skills.blu.misc );
        this.setCalculated("Skill Misc Com",  this.actor.system.skills.com.misc );
        this.setCalculated("Skill Misc Cul",  this.actor.system.skills.cul.misc );
        this.setCalculated("Skill Misc Dip",  this.actor.system.skills.dip.misc );
        this.setCalculated("Skill Misc Dis",  this.actor.system.skills.dis.misc );
        this.setCalculated("Skill Misc Eng",  this.actor.system.skills.eng.misc );
        this.setCalculated("Skill Misc Int",  this.actor.system.skills.int.misc );
        this.setCalculated("Skill Misc Lif",  this.actor.system.skills.lsc.misc );
        this.setCalculated("Skill Misc Med",  this.actor.system.skills.med.misc );
        this.setCalculated("Skill Misc Mys",  this.actor.system.skills.mys.misc );
        this.setCalculated("Skill Misc Per",  this.actor.system.skills.per.misc );
        this.setCalculated("Skill Misc Phy",  this.actor.system.skills.phs.misc );
        this.setCalculated("Skill Misc Pil",  this.actor.system.skills.pil.misc );
        this.setCalculated("Skill Misc Pro 1",  this.actor.system.skills.pro.misc );
        this.setCalculated("Skill Misc Pro 2",  this.actor.system.skills.pro1?.misc || "" );
        this.setCalculated("Skill Misc Sen",  this.actor.system.skills.sen.misc );
        this.setCalculated("Skill Misc Sle",  this.actor.system.skills.sle.misc );
        this.setCalculated("Skill Misc Ste",  this.actor.system.skills.ste.misc );
        this.setCalculated("Skill Misc Sur",  this.actor.system.skills.sur.misc );
        this.setCalculated("Profession 1",  this.actor.system.skills.pro.subname );
        this.setCalculated("Profession 2",  this.actor.system.skills.pro1?.subname || "" );
        this.setCalculated("Skill Notes 1",  "" );
        this.setCalculated("Skill Notes 2",  "" );
        this.setCalculated("Skill Notes 3",  "" );
        this.setCalculated("Initiative Total",  this.actor.system.attributes.init.total );
        this.setCalculated("Initiative Dex",  this.actor.system.abilities.dex.mod );
        this.setCalculated("Initiative Misc",  this.actor.system.attributes.init.bonus );
        this.setCalculated("SP Total",  this.actor.system.attributes.sp.max );
        this.setCalculated("HP Total",  this.actor.system.attributes.hp.max );
        this.setCalculated("RP Total",  this.actor.system.attributes.rp.max );
        this.setCalculated("SP Current",  this.actor.system.attributes.sp.value );
        this.setCalculated("HP Current",  this.actor.system.attributes.hp.value );
        this.setCalculated("RP Current",  this.actor.system.attributes.rp.value );
        this.setCalculated("EAC Total",  this.actor.system.attributes.eac.value );
        this.setCalculated("EAC Armor Bonus",  this.actor.items._source.filter(i => i.type === 'equipment').filter(i => i.system.equipped === true).map(i => i.system.armor.eac)[0] );
        this.setCalculated("EAC Armor Dex Mod",  this.actor.system.abilities.dex.mod > this.actor.items._source.filter(i => i.type === 'equipment').filter(i => i.system.equipped === true).map(i => i.system.armor.dex)[0] ? this.actor.items._source.filter(i => i.type === 'equipment').filter(i => i.system.equipped === true).map(i => i.system.armor.dex)[0] : this.actor.system.abilities.dex.mod );
        this.setCalculated("EAC Armor Misc Mod",  "" );
        this.setCalculated("KAC Total",  this.actor.system.attributes.kac.value );
        this.setCalculated("KAC Armor Bonus",  this.actor.items._source.filter(i => i.type === 'equipment').filter(i => i.system.equipped === true).map(i => i.system.armor.kac)[0] );
        this.setCalculated("KAC Armor Dex Mod",  this.actor.system.abilities.dex.mod > this.actor.items._source.filter(i => i.type === 'equipment').filter(i => i.system.equipped === true).map(i => i.system.armor.dex)[0] ? this.actor.items._source.filter(i => i.type === 'equipment').filter(i => i.system.equipped === true).map(i => i.system.armor.dex)[0] : this.actor.system.abilities.dex.mod );
        this.setCalculated("KAC Armor Misc Mod",  "" );
        this.setCalculated("AC vs CM",  this.actor.system.attributes.cmd.value );
        this.setCalculated("DR",  this.actor.system.traits.damageReduction.value + " / " + (this.actor.system.traits.damageReduction.negatedBy || "-") );
        this.setCalculated("Resistances",  this.actor.system.traits.di.value.join(", ") || "-" );
        this.setCalculated("Fort Total",  this.actor.system.attributes.fort.bonus );
        this.setCalculated("Fort Base Save",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.fort)[0] === "fast" ? Math.floor(0.5*this.actor.system.details.level.value+2) : Math.floor(this.actor.system.details.level.value/3) );
        this.setCalculated("Fort Ability Mod",  this.actor.system.abilities.con.mod );
        this.setCalculated("Fort Misc Mod",  this.actor.system.attributes.fort.misc );
        this.setCalculated("Reflex Total",  this.actor.system.attributes.reflex.bonus );
        this.setCalculated("Reflex Base Save",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.reflex)[0] === "fast" ? Math.floor(0.5*this.actor.system.details.level.value+2) : Math.floor(this.actor.system.details.level.value/3) );
        this.setCalculated("Reflex Ability Mod",  this.actor.system.abilities.dex.mod );
        this.setCalculated("Reflex Misc Mod",  this.actor.system.attributes.reflex.misc );
        this.setCalculated("Will Total",  this.actor.system.attributes.will.bonus );
        this.setCalculated("Will Base Save",  this.actor.items._source.filter(i => i.type === 'class').map(i =>i.system.will)[0] === "fast" ? Math.floor(0.5*this.actor.system.details.level.value+2) : Math.floor(this.actor.system.details.level.value/3) );
        this.setCalculated("Will Ability Mod",  this.actor.system.abilities.wis.mod );
        this.setCalculated("Will Misc Mod",  this.actor.system.attributes.will.misc );
        this.setCalculated("Base Attack Bonus",  this.actor.system.attributes.baseAttackBonus.value );
        this.setCalculated("Melee Total",  this.actor.system.attributes.baseAttackBonus.value + this.actor.system.abilities.str.mod );
        this.setCalculated("Melee BAB",  this.actor.system.attributes.baseAttackBonus.value );
        this.setCalculated("Melee STR",  this.actor.system.abilities.str.mod );
        this.setCalculated("Melee Misc Mod",  "" );
        this.setCalculated("Ranged Total",  this.actor.system.attributes.baseAttackBonus.value + this.actor.system.abilities.dex.mod );
        this.setCalculated("Ranged BAB",  this.actor.system.attributes.baseAttackBonus.value );
        this.setCalculated("Ranged DEX",  this.actor.system.abilities.dex.mod );
        this.setCalculated("Ranged Misc Mod",  "" );
        this.setCalculated("Thrown Total",  this.actor.system.attributes.baseAttackBonus.value + this.actor.system.abilities.str.mod );
        this.setCalculated("Thrown BAB",  this.actor.system.attributes.baseAttackBonus.value );
        this.setCalculated("Thrown STR",  this.actor.system.abilities.str.mod );
        this.setCalculated("Thrown Misc Mod",  "" );
        this.setCalculated("Weapon 1",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.name || "" );
        this.setCalculated("Level 1",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.level || "" );
        this.setCalculated("Attack Bonus 1",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.attackBonus || "" );
        this.setCalculated("Damage 1",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.damage.parts[0].formula.replace(' + \u0040abilities.str.mod', ' + ' + this.actor.system.abilities.str.mod) || "" );
        this.setCalculated("Critical 1",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.critical.effect || "" );
        this.setCalculated("Range 1",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.range.value? this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.range.value + " " + this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.range.units : " -" );
        this.setCalculated("Type 1",  Object.keys(this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.damage.parts[0].types || {}) || "" );
        this.setCalculated("Ammo/Usage 1",  (this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.capacity.value || "  ") + " / " + (this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.usage.value || "") );
        this.setCalculated("Special 1",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[0]?.system.special || "" );
        this.setCalculated("Weapon 2",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.name || "" );
        this.setCalculated("Level 2",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.level || "" );
        this.setCalculated("Attack Bonus 2",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.attackBonus || "" );
        this.setCalculated("Damage 2",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.damage.parts[0].formula.replace(' + \u0040abilities.str.mod', ' + ' + this.actor.system.abilities.str.mod) || "" );
        this.setCalculated("Critical 2",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.critical.effect || "" );
        this.setCalculated("Range 2",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.range.value? this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.range.value + " " + this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.range.units : " -" );
        this.setCalculated("Type 2",  Object.keys(this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.damage.parts[0].types || {}) || "" );
        this.setCalculated("Ammo/Usage 2",  (this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.capacity.value || "  ") + " / " + (this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.usage.value || "") );
        this.setCalculated("Special 2",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[1]?.system.special || "" );
        this.setCalculated("Weapon 3",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.name || "" );
        this.setCalculated("Level 3",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.level || "" );
        this.setCalculated("Attack Bonus 3",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.attackBonus || "" );
        this.setCalculated("Damage 3",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.damage.parts[0].formula.replace(' + \u0040abilities.str.mod', ' + ' + this.actor.system.abilities.str.mod) || "" );
        this.setCalculated("Critical 3",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.critical.effect || "" );
        this.setCalculated("Range 3",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.range.value? this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.range.value + " " + this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.range.units : " -" );
        this.setCalculated("Type 3",  Object.keys(this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.damage.parts[0].types || {}) || "" );
        this.setCalculated("Ammo/Usage 3",  (this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.capacity.value || "  ") + " / " + (this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.usage.value || "") );
        this.setCalculated("Special 3",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[2]?.system.special || "" );
        this.setCalculated("Weapon 4",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.name || "" );
        this.setCalculated("Level 4",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.level || "" );
        this.setCalculated("Attack Bonus 4",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.attackBonus || "" );
        this.setCalculated("Damage 4",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.damage.parts[0].formula.replace(' + \u0040abilities.str.mod', ' + ' + this.actor.system.abilities.str.mod) || "" );
        this.setCalculated("Critical 4",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.critical.effect || "" );
        this.setCalculated("Range 4",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.range.value? this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.range.value + " " + this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.range.units : " -" );
        this.setCalculated("Type 4",  Object.keys(this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.damage.parts[0].types || {}) || "" );
        this.setCalculated("Ammo/Usage 4",  (this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.capacity.value || "  ") + " / " + (this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.usage.value || "") );
        this.setCalculated("Special 4",  this.actor.items.filter(i => i.type === "weapon" && i.system.equipped && i.hasAttack && i.hasDamage)[3]?.system.special || "" )
        this.setCalculated("Abilities 1", this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[0] || "" );
        this.setCalculated("Abilities 2",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[1] || "" );
        this.setCalculated("Abilities 3",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[2] || "" );
        this.setCalculated("Abilities 4",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[3] || "" );
        this.setCalculated("Abilities 5",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[4] || "" );
        this.setCalculated("Abilities 6",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[5] || "" );
        this.setCalculated("Abilities 7",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[6] || "" );
        this.setCalculated("Abilities 8",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[7] || "" );
        this.setCalculated("Abilities 9",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[8] || "" );
        this.setCalculated("Abilities 10",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[9] || "" );
        this.setCalculated("Abilities 11",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[10] || "" );
        this.setCalculated("Abilities 12",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[11] || "" );
        this.setCalculated("Abilities 13",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[12] || "" );
        this.setCalculated("Abilities 14",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[13] || "" );
        this.setCalculated("Abilities 15",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[14] || "" );
        this.setCalculated("Abilities 16",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[15] || "" );
        this.setCalculated("Abilities 17",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[16] || "" );
        this.setCalculated("Abilities 18",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[17] || "" );
        this.setCalculated("Abilities 19",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[18] || "" );
        this.setCalculated("Abilities 20",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source === this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short).slice(19) || "" );
        this.setCalculated("Feats 1",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[0] || "" );
        this.setCalculated("Feats 2",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[1] || "" );
        this.setCalculated("Feats 3",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[2] || "" );
        this.setCalculated("Feats 4",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[3] || "" );
        this.setCalculated("Feats 5",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[4] || "" );
        this.setCalculated("Feats 6",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[5] || "" );
        this.setCalculated("Feats 7",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[6] || "" );
        this.setCalculated("Feats 8",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[7] || "" );
        this.setCalculated("Feats 9",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[8] || "" );
        this.setCalculated("Feats 10",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[9] || "" );
        this.setCalculated("Feats 11",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[10] || "" );
        this.setCalculated("Feats 12",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[11] || "" );
        this.setCalculated("Feats 13",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[12] || "" );
        this.setCalculated("Feats 14",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[13] || "" );
        this.setCalculated("Feats 15",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[14] || "" );
        this.setCalculated("Feats 16",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[15] || "" );
        this.setCalculated("Feats 17",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[16] || "" );
        this.setCalculated("Feats 18",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[17] || "" );
        this.setCalculated("Feats 19",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[18] || "" );
        this.setCalculated("Feats 20",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[19] || "" );
        this.setCalculated("Feats 21",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short)[20] || "" );
        this.setCalculated("Feats 22",  this.actor.items._source.filter(i => i.type === 'feat').filter(i => i.system.source !== this.actor.items._source.filter(i => i.type === 'class').map(i =>i.name)[0]).map(i =>i.name + ", " + i.system.description.short).slice(21) || "" );
        this.setCalculated("Languages 1",  this.actor.system.traits.languages.value.filter(String).map(l => l.capitalize()).slice(1,4).sort().join(", ") || "" );
        this.setCalculated("Languages 2",  this.actor.system.traits.languages.value.filter(String).map(l => l.capitalize()).slice(4,7).sort().join(", ") || "" );
        this.setCalculated("Languages 3",  this.actor.system.traits.languages.value.filter(String).map(l => l.capitalize()).slice(7).sort().join(", ") || "" );
        this.setCalculated("Languages 4",  this.actor.system.traits.languages.custom );
        this.setCalculated("Equipment 1",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[0] || "" );
        this.setCalculated("Equipment 2",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[1] || "" );
        this.setCalculated("Equipment 3",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[2] || "" );
        this.setCalculated("Equipment 4",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[3] || "" );
        this.setCalculated("Equipment 5",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[4] || "" );
        this.setCalculated("Equipment 6",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[5] || "" );
        this.setCalculated("Equipment 7",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[6] || "" );
        this.setCalculated("Equipment 8",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[7] || "" );
        this.setCalculated("Equipment 9",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[8] || "" );
        this.setCalculated("Equipment 10",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[9] || "" );
        this.setCalculated("Equipment 11",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[10] || "" );
        this.setCalculated("Equipment 12",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[11] || "" );
        this.setCalculated("Equipment 13",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[12] || "" );
        this.setCalculated("Equipment 14",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[13] || "" );
        this.setCalculated("Equipment 15",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.name + " (" + i.system.quantity + ")")[14] || "" );
        this.setCalculated("Equipment Level 1",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[0] || "" );
        this.setCalculated("Equipment Level 2",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[1] || "" );
        this.setCalculated("Equipment Level 3",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[2] || "" );
        this.setCalculated("Equipment Level 4",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[3] || "" );
        this.setCalculated("Equipment Level 5",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[4] || "" );
        this.setCalculated("Equipment Level 6",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[5] || "" );
        this.setCalculated("Equipment Level 7",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[6] || "" );
        this.setCalculated("Equipment Level 8",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[7] || "" );
        this.setCalculated("Equipment Level 9",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[8] || "" );
        this.setCalculated("Equipment Level 10",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[9] || "" );
        this.setCalculated("Equipment Level 11",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[10] || "" );
        this.setCalculated("Equipment Level 12",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[11] || "" );
        this.setCalculated("Equipment Level 13",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[12] || "" );
        this.setCalculated("Equipment Level 14",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[13] || "" );
        this.setCalculated("Equipment Level 15",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.level)[14] || "" );
        this.setCalculated("Equipment Bulk 1",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[0] || "" );
        this.setCalculated("Equipment Bulk 2",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[1] || "" );
        this.setCalculated("Equipment Bulk 3",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[2] || "" );
        this.setCalculated("Equipment Bulk 4",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[3] || "" );
        this.setCalculated("Equipment Bulk 5",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[4] || "" );
        this.setCalculated("Equipment Bulk 6",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[5] || "" );
        this.setCalculated("Equipment Bulk 7",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[6] || "" );
        this.setCalculated("Equipment Bulk 8",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[7] || "" );
        this.setCalculated("Equipment Bulk 9",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[8] || "" );
        this.setCalculated("Equipment Bulk 10",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[9] || "" );
        this.setCalculated("Equipment Bulk 11",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[10] || "" );
        this.setCalculated("Equipment Bulk 12",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[11] || "" );
        this.setCalculated("Equipment Bulk 13",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[12] || "" );
        this.setCalculated("Equipment Bulk 14",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[13] || "" );
        this.setCalculated("Equipment Bulk 15",  this.actor.items._source.filter(i => ["augmentation", "weapon", "goods", "consumable", "equipment", "technological", "ammunition", "containers", "armor", "hybrid", "magic", "shield"].includes(i.type)).filter(i =>i.name !== "Unarmed strike").map(i =>i.system.bulk)[14] || "" );
        this.setCalculated("Credits",  this.actor.system.currency.credit );
        this.setCalculated("Total Bulk",  this.actor.system.bulk );
        this.setCalculated("Other Wealth 1",  "UPB: " + this.actor.system.currency.upb );
        this.setCalculated("Other Wealth 2",  "Wealth total: " + this.actor.system.wealth.total );
        this.setCalculated("Other Wealth 3",  "" );
        this.setCalculated("Unencumbered",  this.actor.system.abilities.str.value/2 );
        this.setCalculated("Encumbered",  this.actor.system.abilities.str.value );
        this.setCalculated("Overburdened",  this.actor.system.abilities.str.value + "+" );
        this.setCalculated("XP Earned",  this.actor.system.details.xp.value );
        this.setCalculated("Next Level",  this.actor.system.details.xp.max );
        this.setCalculated("0 Spells Know",  this.actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 0).length || "-" );
        this.setCalculated("1st Spells Known",  this.actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 1).length || "-");
        this.setCalculated("1st Spells Per Day",  this.actor.system.spells.spell1.max );
        this.setCalculated("1st Spell Slots Used",  this.actor.system.spells.spell1.value );
        this.setCalculated("2nd Spells Known",  this.actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 2).length || "-" );
        this.setCalculated("2nd Spells Per Day",  this.actor.system.spells.spell2.max );
        this.setCalculated("2nd Spell Slots Used",  this.actor.system.spells.spell2.value );
        this.setCalculated("3rd Spells Known",  this.actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 3).length || "-" );
        this.setCalculated("3rd Spells Per Day",  this.actor.system.spells.spell3.max );
        this.setCalculated("3rd Spell Slots Used",  this.actor.system.spells.spell3.value );
        this.setCalculated("4th Spells Known",  this.actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 4).length || "-" );
        this.setCalculated("4th Spells Per Day",  this.actor.system.spells.spell4.max );
        this.setCalculated("4th Spell Slots Used",  this.actor.system.spells.spell4.value );
        this.setCalculated("5th Spells Known",  this.actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 5).length || "-" );
        this.setCalculated("5th Spells Per Day",  this.actor.system.spells.spell5.max );
        this.setCalculated("5th Spell Slots Used",  this.actor.system.spells.spell5.value );
        this.setCalculated("6th Spells Known",  this.actor.items._source.filter(i => i.type === 'spell').filter(i => i.system.level === 6).length || "-" );
        this.setCalculated("6th Spells Per Day",  this.actor.system.spells.spell6.max );
        this.setCalculated("6th Spell Slots Used",  this.actor.system.spells.spell6.value );

    }
}

export default MappingClass;
